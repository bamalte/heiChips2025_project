
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 19.1.7 -fPIC -O3)

1. Executing Liberty frontend: /home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.ref/sg13g2_stdcell/lib/sg13g2_stdcell_typ_1p20V_25C.lib
Imported 84 cell types from liberty file.
[INFO] Using SDC file '/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/06-yosys-synthesis/synthesis.abc.sdc' for ABCâ€¦wtaf

2. Executing Verilog-2005 frontend: /home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/heichips25_template.sv
Parsing SystemVerilog input from `/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/heichips25_template.sv' to AST representation.
Storing AST representation for module `$abstract\alu'.
Storing AST representation for module `$abstract\clock'.
Storing AST representation for module `$abstract\controller'.
Storing AST representation for module `$abstract\flags'.
Storing AST representation for module `$abstract\ir'.
Storing AST representation for module `$abstract\memory'.
Storing AST representation for module `$abstract\pc'.
Storing AST representation for module `$abstract\register'.
Storing AST representation for module `$abstract\top'.
Storing AST representation for module `$abstract\heichips25_template'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\heichips25_template'.
Generating RTLIL representation for module `\heichips25_template'.

4.1. Analyzing design hierarchy..
Top module:  \heichips25_template

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

4.3. Analyzing design hierarchy..
Top module:  \heichips25_template
Used module:     \top

4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\controller'.
Generating RTLIL representation for module `\controller'.

4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\flags'.
Generating RTLIL representation for module `\flags'.

4.6. Executing AST frontend in derive mode using pre-parsed AST for module `\alu'.
Generating RTLIL representation for module `\alu'.

4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Generating RTLIL representation for module `\register'.

4.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ir'.
Generating RTLIL representation for module `\ir'.

4.9. Executing AST frontend in derive mode using pre-parsed AST for module `\pc'.
Generating RTLIL representation for module `\pc'.

4.10. Executing AST frontend in derive mode using pre-parsed AST for module `\clock'.
Generating RTLIL representation for module `\clock'.

4.11. Analyzing design hierarchy..
Top module:  \heichips25_template
Used module:     \top
Used module:         \controller
Used module:         \flags
Used module:         \alu
Used module:         \register
Used module:         \ir
Used module:         \pc
Used module:         \clock

4.12. Analyzing design hierarchy..
Top module:  \heichips25_template
Used module:     \top
Used module:         \controller
Used module:         \flags
Used module:         \alu
Used module:         \register
Used module:         \ir
Used module:         \pc
Used module:         \clock
Removing unused module `$abstract\heichips25_template'.
Removing unused module `$abstract\top'.
Removing unused module `$abstract\register'.
Removing unused module `$abstract\pc'.
Removing unused module `$abstract\memory'.
Removing unused module `$abstract\ir'.
Removing unused module `$abstract\flags'.
Removing unused module `$abstract\controller'.
Removing unused module `$abstract\clock'.
Removing unused module `$abstract\alu'.
Removed 10 unused modules.
Renaming module heichips25_template to heichips25_template.

5. Generating Graphviz representation of design.
Writing dot description to `/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/06-yosys-synthesis/hierarchy.dot'.
Dumping module heichips25_template to page 1.

6. Executing ATTRMAP pass (move or copy attributes).

7. Executing TRIBUF pass.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \heichips25_template
Used module:     \top
Used module:         \controller
Used module:         \flags
Used module:         \alu
Used module:         \register
Used module:         \ir
Used module:         \pc
Used module:         \clock

8.2. Analyzing design hierarchy..
Top module:  \heichips25_template
Used module:     \top
Used module:         \controller
Used module:         \flags
Used module:         \alu
Used module:         \register
Used module:         \ir
Used module:         \pc
Used module:         \clock
Removed 0 unused modules.

9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55 in module ir.
Marked 3 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52 in module register.
Removed 1 dead cases from process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43 in module alu.
Marked 1 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43 in module alu.
Marked 1 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42 in module alu.
Marked 3 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29 in module flags.
Marked 1 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7 in module controller.
Marked 2 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5 in module controller.
Marked 6 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/top.v:66$3 in module top.
Marked 2 switch rules as full_case in process $proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56 in module pc.
Removed a total of 1 dead cases.

11. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 5 assignments to connections.

12. Executing PROC_INIT pass (extract init attributes).

13. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\ir.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55'.
Found async reset \rst in `\register.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52'.
Found async reset \rst in `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42'.
Found async reset \rst in `\flags.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29'.
Found async reset \rst in `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5'.
Found async reset \rst in `\pc.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56'.

14. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~19 debug messages>

15. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ir.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55'.
     1/1: $0\ir[7:0]
Creating decoders for process `\register.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52'.
     1/1: $0\data[7:0]
Creating decoders for process `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43'.
     1/2: $1\alu[7:0] [7:1]
     2/2: $1\alu[7:0] [0]
Creating decoders for process `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42'.
     1/1: $0\tmp[7:0]
Creating decoders for process `\flags.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29'.
     1/2: $0\flags[1:0] [1]
     2/2: $0\flags[1:0] [0]
Creating decoders for process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
     1/2: $1\stage_rst[0:0]
     2/2: $1$mem2bits$\ctrl_rom$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:84$4[34:0]$27
Creating decoders for process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5'.
     1/1: $0\stage[3:0]
Creating decoders for process `\top.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/top.v:66$3'.
     1/6: $6\bus[15:0]
     2/6: $5\bus[15:0]
     3/6: $4\bus[15:0]
     4/6: $3\bus[15:0]
     5/6: $2\bus[15:0]
     6/6: $1\bus[15:0]
Creating decoders for process `\pc.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56'.
     1/1: $0\pc[15:0]

16. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\alu.\alu' from process `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43'.
No latch inferred for signal `\controller.\ctrl_word' from process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
No latch inferred for signal `\controller.\stage_rst' from process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
No latch inferred for signal `\controller.$mem2bits$\ctrl_rom$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:84$4' from process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
No latch inferred for signal `\top.\bus' from process `\top.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/top.v:66$3'.

17. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ir.\ir' using process `\ir.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55'.
  created $adff cell `$procdff$184' with positive edge clock and positive level reset.
Creating register for signal `\register.\data' using process `\register.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52'.
  created $adff cell `$procdff$187' with positive edge clock and positive level reset.
Creating register for signal `\alu.\tmp' using process `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42'.
  created $adff cell `$procdff$190' with positive edge clock and positive level reset.
Creating register for signal `\flags.\flags' using process `\flags.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29'.
  created $adff cell `$procdff$193' with negative edge clock and positive level reset.
Creating register for signal `\controller.\stage' using process `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5'.
  created $adff cell `$procdff$196' with negative edge clock and positive level reset.
Creating register for signal `\pc.\pc' using process `\pc.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56'.
  created $adff cell `$procdff$199' with positive edge clock and positive level reset.

18. Executing PROC_MEMWR pass (convert process memory writes to cells).

19. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ir.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55'.
Removing empty process `ir.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/ir.v:11$55'.
Found and cleaned up 3 empty switches in `\register.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52'.
Removing empty process `register.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:13$52'.
Found and cleaned up 1 empty switch in `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43'.
Removing empty process `alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:31$43'.
Found and cleaned up 1 empty switch in `\alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42'.
Removing empty process `alu.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:23$42'.
Found and cleaned up 3 empty switches in `\flags.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29'.
Removing empty process `flags.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/flags.v:18$29'.
Found and cleaned up 1 empty switch in `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
Removing empty process `controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:75$7'.
Found and cleaned up 1 empty switch in `\controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5'.
Removing empty process `controller.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:63$5'.
Found and cleaned up 6 empty switches in `\top.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/top.v:66$3'.
Removing empty process `top.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/top.v:66$3'.
Found and cleaned up 2 empty switches in `\pc.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56'.
Removing empty process `pc.$proc$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:12$56'.
Cleaned up 19 empty switches.

20. Executing CHECK pass (checking for obvious problems).
Checking module heichips25_template...
Checking module ir...
Checking module register...
Checking module alu...
Checking module flags...
Checking module controller...
Checking module top...
Checking module pc...
Checking module clock...
Found and reported 0 problems.

21. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.
Optimizing module ir.
<suppressed ~1 debug messages>
Optimizing module register.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~5 debug messages>
Optimizing module flags.
<suppressed ~7 debug messages>
Optimizing module controller.
<suppressed ~4 debug messages>
Optimizing module top.
Optimizing module pc.
<suppressed ~1 debug messages>
Optimizing module clock.

22. Executing FLATTEN pass (flatten design).
Deleting now unused module ir.
Deleting now unused module register.
Deleting now unused module alu.
Deleting now unused module flags.
Deleting now unused module controller.
Deleting now unused module top.
Deleting now unused module pc.
Deleting now unused module clock.
<suppressed ~10 debug messages>

23. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.
<suppressed ~8 debug messages>

24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 3 unused cells and 101 unused wires.
<suppressed ~15 debug messages>

25. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$151.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$154.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$157.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$163.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$166.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$172.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$118.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$121.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$124.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$127.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$130.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$136.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$139.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$142.
    dead port 1/2 on $mux $flatten\sap2_inst.$procmux$145.
Removed 15 multiplexer ports.
<suppressed ~12 debug messages>

28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

30. Executing OPT_DFF pass (perform DFF optimizations).

31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

32. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

33. Rerunning OPT passes. (Maybe there is more to doâ€¦)

34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

37. Executing OPT_DFF pass (perform DFF optimizations).

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

39. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

40. Executing FSM pass (extract and optimize FSM).

40.1. Executing FSM_DETECT pass (finding FSMs in design).

40.2. Executing FSM_EXTRACT pass (extracting FSM from design).

40.3. Executing FSM_OPT pass (simple optimizations of FSMs).

40.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

40.5. Executing FSM_OPT pass (simple optimizations of FSMs).

40.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

40.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

40.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

41. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

46. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\sap2_inst.\reg_c.$procdff$187 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\reg_c.$0\data[7:0], Q = \sap2_inst.reg_c.data).
Adding EN signal on $flatten\sap2_inst.\reg_b.$procdff$187 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\reg_b.$0\data[7:0], Q = \sap2_inst.reg_b.data).
Adding EN signal on $flatten\sap2_inst.\reg_a.$procdff$187 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\reg_a.$0\data[7:0], Q = \sap2_inst.reg_a.data).
Adding EN signal on $flatten\sap2_inst.\pc.$procdff$199 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\pc.$0\pc[15:0] [15:8], Q = \sap2_inst.pc.pc [15:8]).
Adding EN signal on $flatten\sap2_inst.\pc.$procdff$199 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\pc.$0\pc[15:0] [7:0], Q = \sap2_inst.pc.pc [7:0]).
Adding EN signal on $flatten\sap2_inst.\ir.$procdff$184 ($adff) from module heichips25_template (D = \sap2_inst.alu.bus [7:0], Q = \sap2_inst.ir.ir).
Adding EN signal on $flatten\sap2_inst.\flags.$procdff$193 ($adff) from module heichips25_template (D = $flatten\sap2_inst.\flags.$0\flags[1:0], Q = \sap2_inst.flags.flags).
Adding EN signal on $flatten\sap2_inst.\alu.$procdff$190 ($adff) from module heichips25_template (D = \sap2_inst.alu.bus [7:0], Q = \sap2_inst.alu.tmp).

47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

48. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.
<suppressed ~6 debug messages>

49. Rerunning OPT passes. (Maybe there is more to doâ€¦)

50. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

51. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

53. Executing OPT_DFF pass (perform DFF optimizations).

54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

55. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

56. Rerunning OPT passes. (Maybe there is more to doâ€¦)

57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

60. Executing OPT_DFF pass (perform DFF optimizations).

61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

62. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

63. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 6) from port B of cell heichips25_template.$auto$opt_dff.cc:195:make_patterns_logic$221 ($ne).
Removed top 1 bits (of 4) from port B of cell heichips25_template.$flatten\sap2_inst.\controller.$eq$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:78$11 ($eq).
Removed top 1 bits (of 3) from port B of cell heichips25_template.$flatten\sap2_inst.\alu.$procmux$74_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell heichips25_template.$flatten\sap2_inst.\alu.$procmux$75_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell heichips25_template.$flatten\sap2_inst.\alu.$procmux$76_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_c.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_c.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_b.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_b.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_a.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_a.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
Removed top 8 bits (of 16) from mux cell heichips25_template.$flatten\sap2_inst.$procmux$115 ($mux).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6 ($add).
Removed top 28 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6 ($add).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\reg_a.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 24 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\reg_a.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
Removed top 31 bits (of 32) from port B of cell heichips25_template.$flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57 ($add).
Removed top 16 bits (of 32) from port Y of cell heichips25_template.$flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57 ($add).
Removed top 8 bits (of 16) from wire heichips25_template.$flatten\sap2_inst.$6\bus[15:0].
Removed top 28 bits (of 32) from wire heichips25_template.$flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6_Y.
Removed top 16 bits (of 32) from wire heichips25_template.$flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57_Y.
Removed top 1 bits (of 8) from wire heichips25_template.$flatten\sap2_inst.\reg_a.$0\data[7:0].
Removed top 24 bits (of 32) from wire heichips25_template.$flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53_Y.
Removed top 24 bits (of 32) from wire heichips25_template.$flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53_Y.

64. Executing PEEPOPT pass (run peephole optimizers).

65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

66. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module heichips25_template:
  creating $macc model for $flatten\sap2_inst.\alu.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:34$44 ($add).
  creating $macc model for $flatten\sap2_inst.\alu.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:37$45 ($sub).
  creating $macc model for $flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6 ($add).
  creating $macc model for $flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57 ($add).
  creating $macc model for $flatten\sap2_inst.\reg_a.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
  creating $macc model for $flatten\sap2_inst.\reg_a.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
  creating $macc model for $flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
  creating $macc model for $flatten\sap2_inst.\reg_b.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
  creating $macc model for $flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53 ($add).
  creating $macc model for $flatten\sap2_inst.\reg_c.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54 ($sub).
  creating $alu model for $macc $flatten\sap2_inst.\reg_c.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54.
  creating $alu model for $macc $flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53.
  creating $alu model for $macc $flatten\sap2_inst.\reg_b.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54.
  creating $alu model for $macc $flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53.
  creating $alu model for $macc $flatten\sap2_inst.\reg_a.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54.
  creating $alu model for $macc $flatten\sap2_inst.\reg_a.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53.
  creating $alu model for $macc $flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57.
  creating $alu model for $macc $flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6.
  creating $alu model for $macc $flatten\sap2_inst.\alu.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:37$45.
  creating $alu model for $macc $flatten\sap2_inst.\alu.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:34$44.
  creating $alu cell for $flatten\sap2_inst.\alu.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:34$44: $auto$alumacc.cc:495:replace_alu$240
  creating $alu cell for $flatten\sap2_inst.\alu.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/alu.v:37$45: $auto$alumacc.cc:495:replace_alu$243
  creating $alu cell for $flatten\sap2_inst.\controller.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/controller.v:70$6: $auto$alumacc.cc:495:replace_alu$246
  creating $alu cell for $flatten\sap2_inst.\pc.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/pc.v:18$57: $auto$alumacc.cc:495:replace_alu$249
  creating $alu cell for $flatten\sap2_inst.\reg_a.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53: $auto$alumacc.cc:495:replace_alu$252
  creating $alu cell for $flatten\sap2_inst.\reg_a.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54: $auto$alumacc.cc:495:replace_alu$255
  creating $alu cell for $flatten\sap2_inst.\reg_b.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53: $auto$alumacc.cc:495:replace_alu$258
  creating $alu cell for $flatten\sap2_inst.\reg_b.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54: $auto$alumacc.cc:495:replace_alu$261
  creating $alu cell for $flatten\sap2_inst.\reg_c.$add$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:19$53: $auto$alumacc.cc:495:replace_alu$264
  creating $alu cell for $flatten\sap2_inst.\reg_c.$sub$/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/src/register.v:21$54: $auto$alumacc.cc:495:replace_alu$267
  created 10 $alu and 0 $macc cells.

67. Executing SHARE pass (SAT-based resource sharing).

68. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

73. Executing OPT_DFF pass (perform DFF optimizations).

74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

75. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

76. Executing MEMORY pass.

76.1. Executing OPT_MEM pass (optimize memories).
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 0
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 1
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 2
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 3
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 4
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 5
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 6
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 7
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 8
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 9
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 10
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 11
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 12
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 13
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 14
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 15
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 16
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 17
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 18
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 19
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 20
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 21
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 22
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 23
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 24
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 25
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 26
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 27
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 28
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 29
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 30
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 31
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 32
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 33
heichips25_template.sap2_inst.controller.ctrl_rom: removing const-x lane 34
Performed a total of 1 transformations.

76.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

76.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

76.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

76.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

76.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 36 unused cells and 43 unused wires.
<suppressed ~47 debug messages>

76.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

76.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

76.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

76.10. Executing MEMORY_COLLECT pass (generating $mem cells).

77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

78. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.
<suppressed ~40 debug messages>

79. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
<suppressed ~32 debug messages>
Removed a total of 8 cells.

80. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:266:slice$233 ($adffe) from module heichips25_template (removing D path).
Handling never-active EN on $auto$ff.cc:266:slice$210 ($adffe) from module heichips25_template (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$210 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$233 ($dlatch) from module heichips25_template.

81. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 11 unused cells and 64 unused wires.
<suppressed ~15 debug messages>

82. Rerunning OPT passes (Removed registers in this run.)

83. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

85. Executing OPT_DFF pass (perform DFF optimizations).

86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

87. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

88. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

90. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

91. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

92. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

93. Executing OPT_SHARE pass.

94. Executing OPT_DFF pass (perform DFF optimizations).

95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

96. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

97. Executing TECHMAP pass (map to technology primitives).

97.1. Executing Verilog-2005 frontend: /nix/store/f2psm4dyix5p4r8c1wyz8m67psng0rjb-yosys-0.54/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/f2psm4dyix5p4r8c1wyz8m67psng0rjb-yosys-0.54/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

97.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~75 debug messages>

98. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

100. Executing OPT_DFF pass (perform DFF optimizations).

101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

102. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

104. Executing OPT_DFF pass (perform DFF optimizations).

105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

106. Executing ABC pass (technology mapping using ABC).

106.1. Extracting gate netlist of module `\heichips25_template' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

107. Executing OPT pass (performing simple optimizations).

107.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

107.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

107.3. Executing OPT_DFF pass (perform DFF optimizations).

107.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

107.5. Finished fast OPT passes.

108. Executing HIERARCHY pass (managing design hierarchy).

108.1. Analyzing design hierarchy..
Top module:  \heichips25_template

108.2. Analyzing design hierarchy..
Top module:  \heichips25_template
Removed 0 unused modules.

109. Executing CHECK pass (checking for obvious problems).
Checking module heichips25_template...
Found and reported 0 problems.

110. Printing statistics.

=== heichips25_template ===

   Number of wires:                100
   Number of wire bits:            490
   Number of public wires:         100
   Number of public wire bits:     490
   Number of ports:                  8
   Number of port bits:             43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $scopeinfo                     10

111. Generating Graphviz representation of design.
Writing dot description to `/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/06-yosys-synthesis/primitive_techmap.dot'.
Dumping module heichips25_template to page 1.

112. Executing OPT pass (performing simple optimizations).

112.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

112.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

112.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \heichips25_template..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

112.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \heichips25_template.
Performed a total of 0 changes.

112.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\heichips25_template'.
Removed a total of 0 cells.

112.6. Executing OPT_DFF pass (perform DFF optimizations).

112.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..

112.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module heichips25_template.

112.9. Finished OPT passes. (There is nothing left to do.)

113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 10 unused cells and 92 unused wires.
<suppressed ~102 debug messages>
{
   "creator": "Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 19.1.7 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/tmp/07b7ae4f7d4449d6a430948d9fdb262b.lib ",
   "modules": {
      "\\heichips25_template": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         0,
         "num_cells_by_type": {

         }
      }
   },
      "design": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         0,
         "num_cells_by_type": {

         }
      }
}

114. Printing statistics.

=== heichips25_template ===

   Number of wires:                  8
   Number of wire bits:             43
   Number of public wires:           8
   Number of public wire bits:      43
   Number of ports:                  8
   Number of port bits:             43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

[INFO] Applying tri-state buffer mapping from '/home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/tribuff_map.v'â€¦

115. Executing TECHMAP pass (map to technology primitives).

115.1. Executing Verilog-2005 frontend: /home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/tribuff_map.v
Parsing Verilog input from `/home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

116. Executing SIMPLEMAP pass (map simple cells to gate primitives).
[INFO] Applying latch mapping from '/home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/latch_map.v'â€¦

117. Executing TECHMAP pass (map to technology primitives).

117.1. Executing Verilog-2005 frontend: /home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/latch_map.v
Parsing Verilog input from `/home/user/.ciel/ciel/ihp-sg13g2/versions/cb7daaa8901016cf7c5d272dfa322c41f024931f/ihp-sg13g2/libs.tech/librelane/sg13g2_stdcell/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Successfully finished Verilog frontend.

117.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

118. Executing SIMPLEMAP pass (map simple cells to gate primitives).

119. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sg13g2_dfrbpq_1 (noninv, pins=4, area=48.99) is a direct match for cell type $_DFF_PN0_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    unmapped dff cell: $_DFF_P_
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sg13g2_dfrbpq_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    unmapped dff cell: $_DFF_PN1_
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFE_NN_
    unmapped dff cell: $_DFFE_NP_
    unmapped dff cell: $_DFFE_PN_
    unmapped dff cell: $_DFFE_PP_
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

119.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
<suppressed ~4 debug messages>
Mapping DFF cells in module `\heichips25_template':
{
   "creator": "Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 19.1.7 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/tmp/07b7ae4f7d4449d6a430948d9fdb262b.lib ",
   "modules": {
      "\\heichips25_template": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         0,
         "num_cells_by_type": {

         }
      }
   },
      "design": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         0,
         "num_cells_by_type": {

         }
      }
}

120. Printing statistics.

=== heichips25_template ===

   Number of wires:                  8
   Number of wire bits:             43
   Number of public wires:           8
   Number of public wire bits:      43
   Number of ports:                  8
   Number of port bits:             43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

[INFO] Using generated ABC script '/home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/06-yosys-synthesis/AREA_0.abc'â€¦

121. Executing ABC pass (technology mapping using ABC).

121.1. Extracting gate netlist of module `\heichips25_template' to `/tmp/yosys-abc-k8oxJR/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

122. Executing SETUNDEF pass (replace undef values with defined constants).

123. Executing HILOMAP pass (mapping to constant drivers).

124. Executing SPLITNETS pass (splitting up multi-bit signals).

125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \heichips25_template..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

126. Executing INSBUF pass (insert buffer cells for connected wires).

127. Executing CHECK pass (checking for obvious problems).
Checking module heichips25_template...
Found and reported 0 problems.
{
   "creator": "Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 19.1.7 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/user/Documents/heiChips2025_project/sap_2_v2/heichips25-template/librelane/runs/RUN_2025-08-07_21-42-39/tmp/07b7ae4f7d4449d6a430948d9fdb262b.lib ",
   "modules": {
      "\\heichips25_template": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         24,
         "area":              174.182400,
         "num_cells_by_type": {
            "sg13g2_tiehi": 8,
            "sg13g2_tielo": 16
         }
      }
   },
      "design": {
         "num_wires":         8,
         "num_wire_bits":     43,
         "num_pub_wires":     8,
         "num_pub_wire_bits": 43,
         "num_ports":         8,
         "num_port_bits":     43,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         24,
         "area":              174.182400,
         "num_cells_by_type": {
            "sg13g2_tiehi": 8,
            "sg13g2_tielo": 16
         }
      }
}

128. Printing statistics.

=== heichips25_template ===

   Number of wires:                  8
   Number of wire bits:             43
   Number of public wires:           8
   Number of public wire bits:      43
   Number of ports:                  8
   Number of port bits:             43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     sg13g2_tiehi                    8
     sg13g2_tielo                   16

   Chip area for module '\heichips25_template': 174.182400
     of which used for sequential elements: 0.000000 (0.00%)

129. Executing Verilog backend.
Dumping module `\heichips25_template'.

130. Executing JSON backend.
